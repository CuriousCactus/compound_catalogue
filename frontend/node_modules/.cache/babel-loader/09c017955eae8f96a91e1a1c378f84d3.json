{"ast":null,"code":"var _jsxFileName = \"/home/lois/Sites/compound_catalogue/frontend/src/compound_table/table.js\";\nimport React from 'react';\nimport { useQuery } from 'react-apollo';\nimport { gql } from 'apollo-boost';\nimport Table from '@material-ui/core/Table';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TablePagination from '@material-ui/core/TablePagination';\nimport Paper from '@material-ui/core/Paper';\nimport { CompoundTableHeader } from './table_header';\nimport { CompoundTableBody } from './table_body';\nconst QUERY_COMPOUNDS = gql`\n  query {\n    compounds\t{\n      compoundId\n      molecularFormula\n      molecularWeight\n    }\n  }\n`;\n\nfunction descendingComparator(a, b, orderBy) {\n  if (b[orderBy] < a[orderBy]) {\n    return -1;\n  }\n\n  if (b[orderBy] > a[orderBy]) {\n    return 1;\n  }\n\n  return 0;\n}\n\nfunction getComparator(order, orderBy) {\n  return order === 'desc' ? (a, b) => descendingComparator(a, b, orderBy) : (a, b) => -descendingComparator(a, b, orderBy);\n}\n\nfunction stableSort(array, comparator) {\n  const stabilizedThis = array.map((el, index) => [el, index]);\n  stabilizedThis.sort((a, b) => {\n    const order = comparator(a[0], b[0]);\n    if (order !== 0) return order;\n    return a[1] - b[1];\n  });\n  return stabilizedThis.map(el => el[0]);\n}\n\nconst [order, setOrder] = React.useState('asc');\nconst [orderBy, setOrderBy] = React.useState('calories');\nconst [page, setPage] = React.useState(0);\nconst [rowsPerPage, setRowsPerPage] = React.useState(100);\nconst {\n  data,\n  loading\n} = useQuery(QUERY_COMPOUNDS, {\n  pollInterval: 500\n});\nexport function EnhancedTable() {\n  if (loading) return /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 23\n    }\n  }, \"Loading...\");\n\n  const handleRequestSort = (event, property) => {\n    const isAsc = orderBy === property && order === 'asc';\n    setOrder(isAsc ? 'desc' : 'asc');\n    setOrderBy(property);\n  };\n\n  const handleChangePage = (event, newPage) => {\n    setPage(newPage);\n  };\n\n  const handleChangeRowsPerPage = event => {\n    setRowsPerPage(parseInt(event.target.value, 10));\n    setPage(0);\n  };\n\n  const sortedData = stableSort(data.compounds, getComparator(order, orderBy)).slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"root\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Paper, {\n    className: \"paper\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(TableContainer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Table, {\n    className: \"table\",\n    \"aria-labelledby\": \"tableTitle\",\n    \"aria-label\": \"enhanced table\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(CompoundTableHeader, {\n    order: order,\n    orderBy: orderBy,\n    onRequestSort: handleRequestSort,\n    rowCount: data.compounds.length,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(CompoundTableBody, {\n    tableData: sortedData,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 13\n    }\n  }))), /*#__PURE__*/React.createElement(TablePagination, {\n    rowsPerPageOptions: [5, 10, 25, 100],\n    component: \"div\",\n    count: data.compounds.length,\n    rowsPerPage: rowsPerPage,\n    page: page,\n    onChangePage: handleChangePage,\n    onChangeRowsPerPage: handleChangeRowsPerPage,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 9\n    }\n  })));\n}","map":{"version":3,"sources":["/home/lois/Sites/compound_catalogue/frontend/src/compound_table/table.js"],"names":["React","useQuery","gql","Table","TableContainer","TablePagination","Paper","CompoundTableHeader","CompoundTableBody","QUERY_COMPOUNDS","descendingComparator","a","b","orderBy","getComparator","order","stableSort","array","comparator","stabilizedThis","map","el","index","sort","setOrder","useState","setOrderBy","page","setPage","rowsPerPage","setRowsPerPage","data","loading","pollInterval","EnhancedTable","handleRequestSort","event","property","isAsc","handleChangePage","newPage","handleChangeRowsPerPage","parseInt","target","value","sortedData","compounds","slice","length"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { useQuery } from 'react-apollo';\nimport { gql } from 'apollo-boost';\nimport Table from '@material-ui/core/Table';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TablePagination from '@material-ui/core/TablePagination';\nimport Paper from '@material-ui/core/Paper';\nimport { CompoundTableHeader } from './table_header';\nimport { CompoundTableBody } from './table_body';\n\nconst QUERY_COMPOUNDS = gql`\n  query {\n    compounds\t{\n      compoundId\n      molecularFormula\n      molecularWeight\n    }\n  }\n`;\n\nfunction descendingComparator(a, b, orderBy) {\n  if (b[orderBy] < a[orderBy]) {\n    return -1;\n  }\n  if (b[orderBy] > a[orderBy]) {\n    return 1;\n  }\n  return 0;\n}\n\nfunction getComparator(order, orderBy) {\n  return order === 'desc'\n    ? (a, b) => descendingComparator(a, b, orderBy)\n    : (a, b) => -descendingComparator(a, b, orderBy);\n}\n\nfunction stableSort(array, comparator) {\n  const stabilizedThis = array.map((el, index) => [el, index]);\n  stabilizedThis.sort((a, b) => {\n    const order = comparator(a[0], b[0]);\n    if (order !== 0) return order;\n    return a[1] - b[1];\n  });\n  return stabilizedThis.map((el) => el[0]);\n}\n\nconst [order, setOrder] = React.useState('asc');\nconst [orderBy, setOrderBy] = React.useState('calories');\nconst [page, setPage] = React.useState(0);\nconst [rowsPerPage, setRowsPerPage] = React.useState(100);\n\nconst { data, loading } = useQuery(\n  QUERY_COMPOUNDS, {\n    pollInterval: 500\n  }\n);\n\nexport function EnhancedTable() {\n\n  if (loading) return <p>Loading...</p>;\n\n  const handleRequestSort = (event, property) => {\n    const isAsc = orderBy === property && order === 'asc';\n    setOrder(isAsc ? 'desc' : 'asc');\n    setOrderBy(property);\n  };\n\n  const handleChangePage = (event, newPage) => {\n    setPage(newPage);\n  };\n\n  const handleChangeRowsPerPage = (event) => {\n    setRowsPerPage(parseInt(event.target.value, 10));\n    setPage(0);\n  };\n\n  const sortedData = stableSort(data.compounds, getComparator(order, orderBy))\n    .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\n\n  return (\n    <div className=\"root\">\n      <Paper className=\"paper\">\n        <TableContainer>\n          <Table className=\"table\" aria-labelledby=\"tableTitle\" aria-label=\"enhanced table\">\n            <CompoundTableHeader order={order} orderBy={orderBy} onRequestSort={handleRequestSort} rowCount={data.compounds.length}/>\n            <CompoundTableBody tableData={sortedData}/>\n          </Table>\n        </TableContainer>\n        <TablePagination\n          rowsPerPageOptions={[5, 10, 25, 100]}\n          component=\"div\"\n          count={data.compounds.length}\n          rowsPerPage={rowsPerPage}\n          page={page}\n          onChangePage={handleChangePage}\n          onChangeRowsPerPage={handleChangeRowsPerPage}\n        />\n      </Paper>\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}