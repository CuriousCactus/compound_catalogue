{"ast":null,"code":"var _jsxFileName = \"/home/lois/Sites/compound_catalogue/frontend/src/EnhancedTable.js\";\nimport React from 'react';\nimport { useQuery } from 'react-apollo';\nimport { gql } from 'apollo-boost';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TablePagination from '@material-ui/core/TablePagination';\nimport TableRow from '@material-ui/core/TableRow';\nimport TableSortLabel from '@material-ui/core/TableSortLabel';\nimport Paper from '@material-ui/core/Paper';\nconst QUERY_COMPOUNDS = gql`\n  query {\n    compounds\t{\n      compoundId\n      molecularFormula\n      molecularWeight\n    }\n  }\n`;\n\nfunction descendingComparator(a, b, orderBy) {\n  if (b[orderBy] < a[orderBy]) {\n    return -1;\n  }\n\n  if (b[orderBy] > a[orderBy]) {\n    return 1;\n  }\n\n  return 0;\n}\n\nfunction getComparator(order, orderBy) {\n  return order === 'desc' ? (a, b) => descendingComparator(a, b, orderBy) : (a, b) => -descendingComparator(a, b, orderBy);\n}\n\nfunction stableSort(array, comparator) {\n  const stabilizedThis = array.map((el, index) => [el, index]);\n  stabilizedThis.sort((a, b) => {\n    const order = comparator(a[0], b[0]);\n    if (order !== 0) return order;\n    return a[1] - b[1];\n  });\n  return stabilizedThis.map(el => el[0]);\n}\n\nconst headCells = [{\n  id: 'compoundId',\n  label: 'ID'\n}, {\n  id: 'calories',\n  label: 'Calories'\n}, {\n  id: 'fat',\n  label: 'FatÂ (g)'\n}];\n\nfunction EnhancedTableHead(props) {\n  const {\n    order,\n    orderBy,\n    onRequestSort\n  } = props;\n\n  const createSortHandler = property => event => {\n    onRequestSort(event, property);\n  };\n\n  return /*#__PURE__*/React.createElement(TableHead, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(TableRow, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }\n  }, headCells.map(headCell => /*#__PURE__*/React.createElement(TableCell, {\n    key: headCell.id,\n    sortDirection: orderBy === headCell.id ? order : false,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(TableSortLabel, {\n    active: orderBy === headCell.id,\n    direction: orderBy === headCell.id ? order : 'asc',\n    onClick: createSortHandler(headCell.id),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 13\n    }\n  }, headCell.label, orderBy === headCell.id ? /*#__PURE__*/React.createElement(\"span\", {\n    className: \"visuallyHidden\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 17\n    }\n  }, order === 'desc' ? 'sorted descending' : 'sorted ascending') : null)))));\n}\n\nfunction EnhancedTableBody(props) {\n  const {\n    sortedData\n  } = props;\n  return /*#__PURE__*/React.createElement(TableBody, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 5\n    }\n  }, data.compounds.map(({\n    compoundId,\n    molecularFormula,\n    molecularWeight\n  }) => /*#__PURE__*/React.createElement(TableRow, {\n    hover: true,\n    tabIndex: -1,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(TableCell, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 11\n    }\n  }, compoundId), /*#__PURE__*/React.createElement(TableCell, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 11\n    }\n  }, molecularFormula), /*#__PURE__*/React.createElement(TableCell, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 11\n    }\n  }, molecularWeight))));\n}\n\nexport function EnhancedTable() {\n  const [order, setOrder] = React.useState('asc');\n  const [orderBy, setOrderBy] = React.useState('calories');\n  const [page, setPage] = React.useState(0);\n  const [rowsPerPage, setRowsPerPage] = React.useState(5);\n  const {\n    data,\n    loading\n  } = useQuery(QUERY_COMPOUNDS, {\n    pollInterval: 500\n  });\n  if (loading) return /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 23\n    }\n  }, \"Loading...\");\n\n  const handleRequestSort = (event, property) => {\n    const isAsc = orderBy === property && order === 'asc';\n    setOrder(isAsc ? 'desc' : 'asc');\n    setOrderBy(property);\n  };\n\n  const handleChangePage = (event, newPage) => {\n    setPage(newPage);\n  };\n\n  const handleChangeRowsPerPage = event => {\n    setRowsPerPage(parseInt(event.target.value, 10));\n    setPage(0);\n  };\n\n  const sortedData = stableSort(data.compounds, getComparator(order, orderBy)).slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"root\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Paper, {\n    className: \"paper\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(TableContainer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Table, {\n    className: \"table\",\n    \"aria-labelledby\": \"tableTitle\",\n    \"aria-label\": \"enhanced table\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(EnhancedTableHead, {\n    order: order,\n    orderBy: orderBy,\n    onRequestSort: handleRequestSort,\n    rowCount: data.compounds.length,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(EnhancedTableBody, {\n    tableData: sortedData,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 13\n    }\n  }))), /*#__PURE__*/React.createElement(TablePagination, {\n    rowsPerPageOptions: [5, 10, 25],\n    component: \"div\",\n    count: data.compounds.length,\n    rowsPerPage: rowsPerPage,\n    page: page,\n    onChangePage: handleChangePage,\n    onChangeRowsPerPage: handleChangeRowsPerPage,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 9\n    }\n  })));\n}","map":{"version":3,"sources":["/home/lois/Sites/compound_catalogue/frontend/src/EnhancedTable.js"],"names":["React","useQuery","gql","Table","TableBody","TableCell","TableContainer","TableHead","TablePagination","TableRow","TableSortLabel","Paper","QUERY_COMPOUNDS","descendingComparator","a","b","orderBy","getComparator","order","stableSort","array","comparator","stabilizedThis","map","el","index","sort","headCells","id","label","EnhancedTableHead","props","onRequestSort","createSortHandler","property","event","headCell","EnhancedTableBody","sortedData","data","compounds","compoundId","molecularFormula","molecularWeight","EnhancedTable","setOrder","useState","setOrderBy","page","setPage","rowsPerPage","setRowsPerPage","loading","pollInterval","handleRequestSort","isAsc","handleChangePage","newPage","handleChangeRowsPerPage","parseInt","target","value","slice","length"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { useQuery } from 'react-apollo';\nimport { gql } from 'apollo-boost';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TablePagination from '@material-ui/core/TablePagination';\nimport TableRow from '@material-ui/core/TableRow';\nimport TableSortLabel from '@material-ui/core/TableSortLabel';\nimport Paper from '@material-ui/core/Paper';\n\nconst QUERY_COMPOUNDS = gql`\n  query {\n    compounds\t{\n      compoundId\n      molecularFormula\n      molecularWeight\n    }\n  }\n`;\n\nfunction descendingComparator(a, b, orderBy) {\n  if (b[orderBy] < a[orderBy]) {\n    return -1;\n  }\n  if (b[orderBy] > a[orderBy]) {\n    return 1;\n  }\n  return 0;\n}\n\nfunction getComparator(order, orderBy) {\n  return order === 'desc'\n    ? (a, b) => descendingComparator(a, b, orderBy)\n    : (a, b) => -descendingComparator(a, b, orderBy);\n}\n\nfunction stableSort(array, comparator) {\n  const stabilizedThis = array.map((el, index) => [el, index]);\n  stabilizedThis.sort((a, b) => {\n    const order = comparator(a[0], b[0]);\n    if (order !== 0) return order;\n    return a[1] - b[1];\n  });\n  return stabilizedThis.map((el) => el[0]);\n}\n\nconst headCells = [\n  { id: 'compoundId', label: 'ID' },\n  { id: 'calories', label: 'Calories' },\n  { id: 'fat', label: 'FatÂ (g)' },\n];\n\nfunction EnhancedTableHead(props) {\n  const { order, orderBy, onRequestSort } = props;\n  const createSortHandler = (property) => (event) => {\n    onRequestSort(event, property);\n  };\n\n  return (\n    <TableHead>\n      <TableRow>\n        {headCells.map((headCell) => (\n          <TableCell\n            key={headCell.id}\n            sortDirection={orderBy === headCell.id ? order : false}\n          >\n            <TableSortLabel\n              active={orderBy === headCell.id}\n              direction={orderBy === headCell.id ? order : 'asc'}\n              onClick={createSortHandler(headCell.id)}\n            >\n              {headCell.label}\n              {orderBy === headCell.id ? (\n                <span className=\"visuallyHidden\">\n                  {order === 'desc' ? 'sorted descending' : 'sorted ascending'}\n                </span>\n              ) : null}\n            </TableSortLabel>\n          </TableCell>\n        ))}\n      </TableRow>\n    </TableHead>\n  );\n}\n\nfunction EnhancedTableBody(props) {\n  const { sortedData } = props;\n\n  return (\n    <TableBody>\n      {data.compounds.map(({ compoundId, molecularFormula, molecularWeight }) => (\n        <TableRow hover tabIndex={-1}>\n          <TableCell>{compoundId}</TableCell>\n          <TableCell>{molecularFormula}</TableCell>\n          <TableCell>{molecularWeight}</TableCell>\n        </TableRow>\n      ))}\n    </TableBody>\n  );\n}\n\nexport function EnhancedTable() {\n  const [order, setOrder] = React.useState('asc');\n  const [orderBy, setOrderBy] = React.useState('calories');\n  const [page, setPage] = React.useState(0);\n  const [rowsPerPage, setRowsPerPage] = React.useState(5);\n\n  const { data, loading } = useQuery(\n    QUERY_COMPOUNDS, {\n      pollInterval: 500\n    }\n  );\n\n  if (loading) return <p>Loading...</p>;\n\n  const handleRequestSort = (event, property) => {\n    const isAsc = orderBy === property && order === 'asc';\n    setOrder(isAsc ? 'desc' : 'asc');\n    setOrderBy(property);\n  };\n\n  const handleChangePage = (event, newPage) => {\n    setPage(newPage);\n  };\n\n  const handleChangeRowsPerPage = (event) => {\n    setRowsPerPage(parseInt(event.target.value, 10));\n    setPage(0);\n  };\n\n  const sortedData = stableSort(data.compounds, getComparator(order, orderBy))\n    .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\n\n  return (\n    <div className=\"root\">\n      <Paper className=\"paper\">\n        <TableContainer>\n          <Table className=\"table\" aria-labelledby=\"tableTitle\" aria-label=\"enhanced table\">\n            <EnhancedTableHead order={order} orderBy={orderBy} onRequestSort={handleRequestSort} rowCount={data.compounds.length}/>\n            <EnhancedTableBody tableData={sortedData}/>\n          </Table>\n        </TableContainer>\n        <TablePagination\n          rowsPerPageOptions={[5, 10, 25]}\n          component=\"div\"\n          count={data.compounds.length}\n          rowsPerPage={rowsPerPage}\n          page={page}\n          onChangePage={handleChangePage}\n          onChangeRowsPerPage={handleChangeRowsPerPage}\n        />\n      </Paper>\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}